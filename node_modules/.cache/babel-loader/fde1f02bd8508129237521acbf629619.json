{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\quera_chat\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MessageForm from '../components/MessageForm/MessageForm';\nimport MessageList from '../components/MessageList/MessageList';\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [text, setText] = useState();\n  const [person, setPerson] = useState();\n  const [messages, setMessages] = useState([]);\n  const [t, setT] = useState([]);\n  var myarray = [];\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    setMessages([...messages, {\n      body: text,\n      me: true\n    }]);\n    setTimeout(() => fetch(`http://localhost:3001/message/${text}`).then(res => res.json()).then(data => setMessages([...messages, {\n      body: text,\n      me: true\n    }, {\n      body: data.message,\n      me: false\n    }])), 1000);\n    myarray.push(messages);\n  }\n\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n      setText: setText,\n      handleFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"OgKqlN5SEHom7YiJGTEhPYDOkxA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/quera_chat/src/containers/App.js"],"names":["React","useEffect","useState","MessageForm","MessageList","App","text","setText","person","setPerson","messages","setMessages","t","setT","myarray","handleFormSubmit","event","preventDefault","body","me","setTimeout","fetch","then","res","json","data","message","push","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,EAA5B;AACA,QAAK,CAACM,MAAD,EAAQC,SAAR,IAAmBP,QAAQ,EAAhC;AACA,QAAK,CAACQ,QAAD,EAAUC,WAAV,IAAuBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACU,CAAD,EAAGC,IAAH,IAASX,QAAQ,CAAC,EAAD,CAAtB;AACA,MAAIY,OAAO,GAAC,EAAZ;;AACE,WAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAa;AAACQ,MAAAA,IAAI,EAACZ,IAAN;AAAYa,MAAAA,EAAE,EAAC;AAAf,KAAb,CAAD,CAAX;AACNC,IAAAA,UAAU,CAAC,MAAKC,KAAK,CAAE,iCAAgCf,IAAK,EAAvC,CAAL,CAA+CgB,IAA/C,CACTC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADI,EACSF,IADT,CACeG,IAAD,IAAQd,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAa;AAACQ,MAAAA,IAAI,EAACZ,IAAN;AAAYa,MAAAA,EAAE,EAAC;AAAf,KAAb,EAAkC;AAACD,MAAAA,IAAI,EAACO,IAAI,CAACC,OAAX;AAAqBP,MAAAA,EAAE,EAAC;AAAxB,KAAlC,CAAD,CADjC,CAAN,EAC4G,IAD5G,CAAV;AAGKL,IAAAA,OAAO,CAACa,IAAR,CAAajB,QAAb;AACA;;AAGLkB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AAEE,sBACG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEH,OAAtB;AAA+B,MAAA,gBAAgB,EAAEQ;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAMD;;GAxBQV,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport MessageForm from '../components/MessageForm/MessageForm';\nimport MessageList from '../components/MessageList/MessageList';\nimport './App.css';\n\nfunction App() {\n  const[text,setText]=useState()\n  const[person,setPerson]=useState()\n  const[messages,setMessages]=useState([])\n  const[t,setT]=useState([])\n  var myarray=[]\n    function handleFormSubmit(event) {\n      event.preventDefault()\n      setMessages([...messages,{body:text, me:true}])\nsetTimeout(()=> fetch(`http://localhost:3001/message/${text}`).then\n      (res=>res.json() ).then((data)=>setMessages([...messages,{body:text, me:true},{body:data.message , me:false}])),1000\n)\n     myarray.push(messages)\n    }\n\n    \nconsole.log(messages)\n\n  return (\n     <div className=\"App\">\n      <MessageList messages={messages}/>\n      <MessageForm setText={setText} handleFormSubmit={handleFormSubmit} />\n     </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}